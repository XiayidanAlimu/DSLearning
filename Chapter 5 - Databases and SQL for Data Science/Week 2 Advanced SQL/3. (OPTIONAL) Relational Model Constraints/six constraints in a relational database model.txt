Hello, and welcome to relational model constraints advanced topic. In this video, we will learn about the six constraints in a relational database model. At the end of this video, you will be able to describe the different types of relational model constraints. Within any business, data must often adhere to certain restrictions or rules. Constraints help implement the business rules. In a relational data model, data integrity can be achieved using integrity rules or constraints. The following six constraints are defined in a relational database model: entity integrity constraint, referential integrity constraint, semantic integrity constraint, domain constraint, null constraint, and check constraint. We will discuss each of these relational model constraints. To identify each topple in a relation, the relation must have a primary key. The primary key is a unique value that identifies each topple or row in a table. This is the entity integrity constraint. The terms primary and key constraint or unique constraint are also used. This constraint prevents duplicate values in a table. To implement these constraints, indexes are used. The entity integrity constraint states that no attribute participating in the primary key of a relation is allowed to accept null values. The value null indicates that the value is unknown. In the entity integrity constraint, the primary key cannot have an unknown value. For example, in the relation author, author_ID is the primary key. The primary key identifies each topple in the relation. The author_IDA1 points to author Raul Chong from Toronto. If we replace the value A1 with null, we can still identify the author as Raul Chong. However, if we also replace author_IDA4 with null, now we do not know which null value identifies which topple. With the entity integrity constraint, no attribute participating in the primary key is allowed to accept null values. Referential integrity constraint defines relationships between tables and ensures that these relationships remain valid. The validity of the data is enforced using a combination of primary keys and foreign keys. As mentioned previously, for a book to exist, it has to be written by at least one author. The semantic integrity constraint refers to the correctness of the meaning of the data. For example, in the relation author, if the attribute or column city contains a garbage value instead of Toronto, the garbage value does not have any meaning. The semantic integrity constraint is related to the correctness of the data. A domain constraint specifies the permissible values for a given attribute. For example, in the relation author, the attribute country must contain a two letter country code such as CA for Canada or IN for India. If a number value of 34 is entered for the country attribute instead of a two letter country code, the value 34 does not have any meaning. As we saw previously, the entity integrity constraint states that no attribute participating in the primary key is allowed to accept null values. The null constraint specifies that attribute values cannot be null. For example, in the relation author, if either last name or first name contains a null value, it could be difficult to identify the correct author. In this example, first name and last name attribute values cannot be null and author must have a name. The check constraint enforces domain integrity by limiting the values that are accepted by an attribute. The relation author does not have a suitable attribute to explain the check constraint, so we will use the relation book. In the relation book, the attribute year is the year in which a particular book is published. If this was still the year 2010, it would not be meaningful to have a year greater than the current year. The check constraint would enforce the domain integrity by limiting the values that are accepted by the attribute year. Now you can describe the six different types of relational model constraints. Thanks for watching this video.